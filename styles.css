/* 
TODO: code/css style question, probably bad, but ...
i seem to like using class and decendants as a logical grouping for rules, 
kind of a namespace thing.
it makes sense simple page built in seperate sections one at a time,
but not realy using cascading correctly, not concerned about reusing styles and 
keeping css short.  i favor clarity over clever
*/

/* use border-box to force consistant behavior, makes sizing simpler */
html {
    box-sizing: border-box;
}

*, *::before, *::after {
    box-sizing: inherit;
}

/* for consistancy, keep defaults from screwing up the grid of squares */
body * {
    margin: 0;
    padding: 0;
}

body {
    background-color: slategray;
    color: beige;
}

h1 {
    text-align: center;
    margin: 1rem;
}

.reset {
    display: flex;
    justify-content: center;
    margin: 1rem;
}

.reset input {
    width: 4rem;
    font-size: larger;
}

.reset button {
    padding: 0.5rem 2rem;
    font-size: large;
    font-weight: bold;
    border-radius: 16px;
}

.flex-row {
    display: flex;
    justify-content: center;
    align-items: center;
}

/* javascript generated drawing area flex version */
/* -------------------------------------------------------------------- */
.container {
    border: 1px solid red;
    background-color: beige;
    display: flex;
    flex-direction: column;
    justify-content: space-evenly;
    align-items: center;
}

/* dummy row div to avoid dealing with wrap */
.row {
    display: flex;
    justify-content: center;
}

.square {
    background-color: white;
}
/* -------------------------------------------------------------------- */

.options {
    font-size: larger;
    padding: 1rem;
    /* TODO: hack for centering draw area in flex-row  */
    flex-basis: 100%;
}

.options div {
    margin: 1rem;
    display: flex;
    align-items: center;
    justify-content: flex-end;
    flex-wrap: nowrap;
    gap: 1rem;
}

#color {
    min-width: 3rem;
    min-height: 3rem;
}